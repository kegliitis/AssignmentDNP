@page "/EditPost/{id:int}"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IPostService _postService
@inject NavigationManager navMgr;
<div class="card">

    if (dto == null)
    {
    <label>Loading data..</label>
    }
    else
    {
    <h3>Update Post</h3>
    <div class="form-group field">
        <label>Title:</label>
        <input type="text" @bind="dto.Title"/>
    </div>
    <div class="form-group field">
        <label>Body:</label>
        <input type="text" @bind="dto.Body"/>
    </div>
    <div class="button-row">
        <button @onclick="UpdateAsync" class="acceptbtn">Update</button>
    </div>
    }
    @if (!string.IsNullOrEmpty(msg))
    {
        <label style="color: red">@msg</label>
    }
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    private PostUpdateDTO dto = null!;
    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            PostBasicDTO postData = await _postService.GetByIdAsync(Id);

            dto = new(Id)
            {
                Username = postData.Username,
                Title = postData.Title,
                Body = postData.Body
            };
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task UpdateAsync()
    {
        try
        {
            await _postService.UpdateAsync(dto);
            navMgr.NavigateTo("/ViewPosts");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

}